<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	
	<mapper namespace="kr.co.ezen.mapper.StudentMapper">
<!-- 		<sql id="search">
		where stuName like concat('%',#{search},'%')
		</sql> -->
		
		
	<select resultType="kr.co.ezen.entity.Student" id="getList"
		parameterType="kr.co.ezen.entity.Criteria">
		select * from studentName
		where stuName like concat('%',#{search},'%')
		order by stuName;
	</select>
	
	<select resultType="kr.co.ezen.entity.Student" id="getInfo"
	parameterType="int">
		select stuIdx, stuName, stuAddr, stuSchool, stuDept from studentName natural join stuInfo where stuIdx=#{stuIdx}
	</select>
	
	
	<!-- add -->
	<insert id="add" parameterType="kr.co.ezen.entity.Student">
		<selectKey order="BEFORE" keyProperty="stuIdx" resultType="kr.co.ezen.entity.Student">
			select IFNULL(max(stuIdx)+1,1) as stuIdx from studentName
		</selectKey>
		insert into studentName (stuIdx,stuName) values(#{stuIdx},#{stuName})
	</insert>
	<insert id="addInfo" parameterType="kr.co.ezen.entity.Student">
		<selectKey order="BEFORE" keyProperty="stuIdx" resultType="kr.co.ezen.entity.Student">
			select max(stuIdx) as stuIdx from studentName
		</selectKey>
		insert into stuInfo (stuIdx,stuAddr,stuSchool,stuDept)
		values (#{stuIdx},#{stuAddr},#{stuSchool},#{stuDept})
	</insert>
	<!-- add 끝 -->
	
	
	<update id="update" parameterType="kr.co.ezen.entity.Student">
		update stuInfo set stuAddr=#{stuAddr},stuSchool=#{stuSchool},stuDept=#{stuDept}
		where stuIdx=#{stuIdx}
	</update>
	
	
	<delete id="delete" parameterType="int">
		delete from studentName where stuIdx=#{stuIdx}
	</delete>
	<delete id="deleteInfo" parameterType="int">
		delete from stuInfo where stuIdx=#{stuIdx}
	</delete>
	
	
	
	
	</mapper>